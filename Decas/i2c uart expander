sudo apt-get install git bc bison flex libssl-dev make libc6-dev libncurses5-dev crossbuild-essential-armhf

git clone --depth=1 https://github.com/raspberrypi/linux

cd linux

<!-- Configure the kernel for the Raspberry Pi model you are using: -->
<!-- For Raspberry Pi 1, Pi Zero, Pi Zero W, or Compute Module: -->

KERNEL=kernel
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcmrpi_defconfig

<!-- For Raspberry Pi 2, Pi 3, Pi 3+, or Compute Module 3: -->

KERNEL=kernel7
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2709_defconfig

<!-- For Raspberry Pi 4 or Compute Module 4: -->

KERNEL=kernel7l
make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- bcm2711_defconfig

<!-- Run the kernel configuration tool to enable the SC16IS752 driver: -->

make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- menuconfig
<!-- In the menu, navigate to Device Drivers > Character devices > Serial drivers > SC16IS7xx series I2C serial ports support. Press 'Y' to build the driver into the kernel or 'M' to compile it as a loadable module. Ensure the I2C support option under the same section is enabled as well. Save the configuration and exit the menu. -->

<!-- Compile the kernel and modules: -->

make -j$(nproc) ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- zImage modules dtbs
<!-- This may take a while, depending on the performance of your computer. -->

<!-- Prepare the kernel installation: -->

sudo make ARCH=arm CROSS_COMPILE=arm-linux-gnueabihf- INSTALL_MOD_PATH=/tmp/rpi-modules modules_install
<!-- Backup the existing kernel and modules on the Raspberry Pi's boot partition: -->

cd /boot
sudo cp ${KERNEL}.img ${KERNEL}.img.bak
cd /lib/modules
sudo cp -r $(uname -r) $(uname -r).bak
<!-- Copy the compiled kernel and modules to the Raspberry Pi's boot partition and module directory: -->

cd ~/linux
sudo cp arch/arm/boot/zImage /boot/${KERNEL}.img
sudo cp arch/arm/boot/dts/*.dtb /boot/
sudo cp -r /tmp/rpi-modules/lib/modules/* /lib/modules/
<!-- Reboot your Raspberry Pi: -->

sudo reboot
<!-- After rebooting, the new kernel should be running with the SC16IS752 driver enabled. Check if the /dev/ttySC0 and /dev/ttySC1 devices are now available. If you compiled the driver as a module, you may need to load it using sudo modprobe sc16is7xx. -->